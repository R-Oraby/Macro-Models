%%% A simple standard New Keynesian model for Egypt, developed by Ramy Oraby. 
%%% Part of the Substack post: Prioritizing Greater Monetary Policy Independence Over Exchange Rate Flexibility in Egypt. 
%%% Designed to establish a counterfactual scenario in which Egypt’s monetary authorities 
... adhere to a flexible exchange rate while still accommodating favorable conditions for fiscal authorities. 

%%% Parameters are calibrated to fit a stylized Egyptian economy, using values drawn from the empirical literature.

%% 1. Load Data
data = readtable('historical_data2.csv'); %historical data covers the period from 2005-2024

Year = data.Year;
RGDP = 100*log(data.RGDP); % log real GDP
CPI = 100*log(data.CPI);   % log CPI
i_nom = data.i;            % nominal interest rate (%)
e_nom = 100*log(data.e);   % log nominal exchange rate (EGP per 1USD)
i_foreign = data.i_foreign; % US nominal interest rate (%)
CPI_foreign = 100*log(data.CPI_foreign); % log US CPI
NDA = 100*log(data.NDA);    % log real net domestic assets... NDA adjusted for inflation (in 2004 prices)

% Create derived variables
gdp_growth = [NaN; diff(RGDP)];
inflation = [NaN; diff(CPI)];
inflation_foreign = [NaN; diff(CPI_foreign)];
inflation_diff = inflation - inflation_foreign;
NDA_logdiff = [NaN; diff(NDA)];
real_exchange = e_nom + CPI_foreign - CPI;
i_diff = i_foreign - i_nom;
r= i_nom - inflation;
T = height(data);

%% 2. Calibrated Parameters (empirical ranges)
% IS curve
alpha = 0.6;  % output persistence (range: 0.7–0.9)
beta  = 0.15;  % real interest rate sensitivity (range: 0.4–0.6)
gamma = 0.03; % real exchange rate sensitivity (range: 0.1–0.3)

% Phillips curve
phi   = 0.7;  % inflation expectation weight (range: 0.2–0.9)
theta = 0.1;  % output growth sensitivity (range: 0.05–0.3)
psi   = 0.3;  % real exchange rate sensitivity (range: 0.1–0.3)

% Monetary policy
rho   = 0.8;  % interest rate smoothing (range: 0.7–0.9)
lambda= 0.2; % NDA sensitivity (set small, no standard empirical)

%% 3. Initialize simulated series
gdp_growth_sim = zeros(T,1);
inflation_sim  = zeros(T,1);
i_nom_sim      = zeros(T,1);
e_nom_sim      = zeros(T,1);
r_sim          = zeros(T,1);
i_diff_sim             = zeros(T,1);
inflation_diff_sim     = zeros(T,1);
real_exchange_sim      = zeros(T,1);
CPI_sim                = zeros(T,1);
q_gap                  = zeros(T,1);
r_gap                  = zeros(T,1);

% Long-run trend for real exchange rate (appreciates at 0.7% annually)
q_trend = real_exchange(2) - (0:T-1)' * 0.7;

%Random shocks
rng(0);  % for reproducibility

shock_std = 0.5;  % or calibrate from data
shock_IS  = shock_std * randn(T,1);
shock_PC  = shock_std * randn(T,1);
shock_MP  = shock_std * randn(T,1);
shock_UIP = shock_std * randn(T,1);

%% 4. Simulate model using simultaneous equations with fsolve + diagnostics
options = optimoptions('fsolve', 'Display', 'off', 'FunctionTolerance', 1e-6);
r_neutral = 3.5;
rho_uip = 3.5;  % risk premium in percentage points (e.g., 300 basis points)

% Initialize second period with observed data
gdp_growth_sim(2) = gdp_growth(2);
inflation_sim(2)  = inflation(2);
i_nom_sim(2)      = i_nom(2);
e_nom_sim(2)      = e_nom(2);
CPI_sim(2)        = CPI(2);
real_exchange_sim(2) = real_exchange(2);
q_gap(2)          = real_exchange_sim(2) - q_trend(2);
r_sim(2)          = i_nom_sim(2) - inflation_sim(2);
r_gap(2)          = r_sim(2) - r_neutral;

% Track convergence status
convergence_status = true(T,1);

for t = 3:T
    % Define system
    F = @(x) [
        x(1)  - (alpha * gdp_growth_sim(t-1) ...
              - beta * (x(3) - x(2) - r_neutral) ...
              + gamma * (x(4) + CPI_foreign(t) - CPI_sim(t-1) ...
              - q_trend(t)) + shock_IS(t));

        x(2)  - (phi * inflation_sim(t-1) ...
              + theta * x(1) ...
              + psi * (x(4) + CPI_foreign(t) - CPI_sim(t-1) - q_trend(t)) ...
              + shock_PC(t));

       x(3)    - (rho * i_nom_sim(t-1) ...
               + (1-rho)*(10 - lambda * NDA_logdiff(t)) ...
               + shock_MP(t));
            
            % Enforce q_gap(t) = 0 by adjusting e_nom ... to ensure a flexibile EGP per USD
        x(4) - (q_trend(t) + CPI_sim(t-1) ...
             + x(2) - CPI_foreign(t) + shock_UIP(t));  
       
             % CPI_sim(t) =         CPI_sim(t-1) + x(2)    
              
              ];

    x0 = [gdp_growth_sim(t-1); inflation_sim(t-1); i_nom_sim(t-1); e_nom_sim(t-1)];

    [x_sol, ~, exitflag] = fsolve(F, x0, options);

    if exitflag <= 0
        warning('fsolve failed at t = %d (Year = %d). Using fallback values.', t, Year(t));
        convergence_status(t) = false;
        x_sol = x0;  % fallback
    end
    

if ~isreal(x_sol)
    fprintf('\n--- Complex values at t = %d (Year = %d) ---\n', t, Year(t));
    disp(table(["gdp_growth";"inflation";"i_nom";"e_nom"], ...
        real(x_sol), imag(x_sol), 'VariableNames', {'Variable','RealPart','ImagPart'}));
end

    % Assign solution
    gdp_growth_sim(t) = x_sol(1);
    inflation_sim(t)  = x_sol(2);
    i_nom_sim(t)      = x_sol(3);
    e_nom_sim(t)      = x_sol(4);

    % Update rest
    CPI_sim(t) = CPI_sim(t-1) + inflation_sim(t);
    real_exchange_sim(t) = e_nom_sim(t) + CPI_foreign(t) - CPI_sim(t);
    r_sim(t) = i_nom_sim(t) - inflation_sim(t);
    r_gap(t) = r_sim(t) - r_neutral;
    q_gap(t) = real_exchange_sim(t) - q_trend(t);
    i_diff_sim(t) = i_foreign(t) - i_nom_sim(t);
    inflation_diff_sim(t) = inflation_sim(t) - inflation_foreign(t);
    
end    

%% 5. Diagnostic plot for convergence
figure;
plot(Year(3:T), convergence_status(3:T), 'g', 'LineWidth', 1.5);
ylim([-0.1 1.1]); yticks([0 1]); yticklabels({'Fail','Success'});
xlabel('Year'); ylabel('Solver Convergence');
title('fsolve Convergence Status');

%% 6. Charts (Simulated vs Actual)
figure;
subplot(3,2,1);
plot(Year(3:T), i_nom(3:T), 'b', Year(3:T), i_nom_sim(3:T), 'r--');
xlabel('Year'); ylabel('Nominal Interest Rate (%)');
legend({'Actual','Simulated'}, 'Location','northwest');

subplot(3,2,2);
plot(Year(3:T), exp(e_nom(3:T)/100), 'b', Year(3:T), exp(e_nom_sim(3:T)/100), 'r--');
xlabel('Year'); ylabel('EGP per 1US$');
legend({'Actual','Simulated'}, 'Location','northwest');

subplot(3,2,3);
plot(Year(3:T), inflation(3:T), 'b', Year(3:T), inflation_sim(3:T), 'r--');
xlabel('Year'); ylabel('Inflation (%)');
legend({'Actual','Simulated'}, 'Location','northwest');

subplot(3,2,4) 
plot(Year(3:T), exp(CPI(3:T)/100), 'b', Year(3:T), exp(CPI_sim(3:T)/100), 'r--' );
xlabel('Year'); ylabel('Consumer Price Index');
%title('Consumer Price Index');
legend({'Actual','Simulated'}, 'Location','northwest');

subplot(3,2,5);
plot(Year(3:T), gdp_growth(3:T), 'b', Year(3:T), gdp_growth_sim(3:T), 'r--');
xlabel('Year'); ylabel('Real GDP Growth (%)');
legend({'Actual','Simulated'}, 'Location','northwest');
sgtitle('Model Simulation vs Actual Data');

%% 7. Additional Charts: NDA, real interest rate and real exchange rate gaps
figure;

subplot(3,1,1)
bar(Year(3:T), NDA_logdiff(3:T), 'FaceColor', [0.2 0.4 0.8]);
xlabel('Year');
ylabel('Log-Difference of NDA (%)');
title('Net Domestic Assets (NDA) Log-Difference');
yline(0, 'k--');  % horizontal line at 0
grid on;

subplot(3,1,2)
plot(Year(3:T), r_gap(3:T), 'r');
xlabel('Year'); ylabel('Gap (%)');
title('Real Interesr Rate Gap');
yline(0, 'k--');  % horizontal line at 0

subplot(3,1,3) 
plot(Year(3:T), q_gap(3:T), 'k');
xlabel('Year'); ylabel('Real Exchange Rate Gap (%)');
title('Real Exchange Rate Gap (+ve = undervalued)');
yline(0, 'k--');  % horizontal line at 0

sgtitle('Additional Charts');
